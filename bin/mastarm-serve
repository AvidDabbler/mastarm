#!/usr/bin/env node

const budo = require('budo')
const httpProxy = require('http-proxy')
const argv = require('minimist')(process.argv.slice(2))
const path = require('path')

const auto = require('../lib/auto')()
const transform = require('../lib/transform')

auto.files.map(run)

function run ([entry, outfile]) {
  const budoOpts = {
    browserify: {
      debug: true,
      paths: [
        path.join(process.cwd(), '/node_modules'),
        path.join(__dirname, '/../node_modules')
      ],
      transform: transform({
        config: auto.config,
        debug: true,
        env: 'development',
        outfile
      })
    },
    cors: true,
    middleware: [],
    pushstate: true
  }
  const proxyTarget = argv.proxy || auto.config.settings.apiProxy
  if (proxyTarget) {
    const proxyServer = httpProxy.createProxyServer({target: proxyTarget})
    budoOpts.middleware.push(function (req, res, next) {
      if (req.url.indexOf('/api') === 0) {
        req.url = req.url.slice(4)
        proxyServer.web(req, res)
      } else {
        next()
      }
    })
  }

  budo.cli([entry + ':' + outfile], budoOpts)
}
