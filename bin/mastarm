#!/usr/bin/env node

var spawn = require('win-fork')
var path = require('path')
var fs = require('fs')
var join = path.join
var stat = fs.statSync
var exists = fs.existsSync
var resolve = path.resolve

// args void of cmd

var args = process.argv.slice(3)

// command

var cmd = process.argv[2]

// executable

var bin = 'mastarm-' + cmd

// local or resolve to absolute executable path

var local = join(__dirname, bin)

if (exists(local)) {
  bin = local
} else {
  bin = process.env.PATH.split(path.delimiter).reduce(function (binary, p) {
    p = resolve(p, bin)
    return exists(p) && stat(p).isFile() ? p : binary
  }, bin)
}

// display help if bin does not exist

if (!exists(bin)) {
  console.error('\n  %s(1) does not exist', bin)
}

// spawn

var proc = spawn(bin, args, { stdio: 'inherit', customFds: [0, 1, 2] })

proc.on('close', function (code) {
  process.exit(code)
})
