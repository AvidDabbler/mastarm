#!/usr/bin/env node

var AWS = require('aws-sdk')
var uuid = require('uuid')
var auto = require('../lib/auto')(false)
var build = require('../lib/build')

var key = 'assets/index.js'
var settings = auto.config.settings
var s3object = new AWS.S3({
  params: {
    ACL: 'public-read',
    Body: build(auto.entry, auto.config),
    Bucket: settings.s3bucket,
    Key: key
  }
})

console.log('pushing %s to s3 bucket %s', key, settings.s3bucket)
s3object
  .upload()
  .send(function (err, data) {
    if (err) {
      console.error(err.stack)
      process.exit(1)
    } else {
      console.log('finished pushing to s3')

      if (settings.cloudfrontDistributionID) {
        var cf = new AWS.CloudFront()
        console.log('creating invalidation for cf distribution %s at %s', settings.cloudfrontDistributionID, key)
        cf.createInvalidation({
          DistributionId: settings.cloudfrontDistributionID,
          InvalidationBatch: {
            CallerReference: uuid.v4(),
            Paths: {
              Quantity: 1,
              Items: [
                '/' + key
              ]
            }
          }
        }, function (err, data) {
          if (err) {
            console.error(err.stack)
            process.exit(1)
          } else {
            console.log('finished deploying')
            process.exit(0)
          }
        })
      } else {
        console.log('finished deploying')
        process.exit(0)
      }
    }
  })
